import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as d,c,b as o}from"./app-DNTRvR-x.js";const i={},l=o('<p>C++ 中存在许多标点符号，例如 <code>;</code>、<code>,</code>、<code>{</code>、<code>}</code>、<code>(</code>、<code>)</code>、<code>[</code>、<code>]</code>、<code>.</code>、等等。这些标点符号在程序中有着特殊的作用。它们用于分隔程序的不同部分、表示程序的结构。</p><p>需要注意的是，C++ 中存在由多个字符组成的标点符号，例如 <code>&lt;&lt;</code>、<code>&gt;&gt;</code>、<code>::</code>、<code>-&gt;</code> 等等。这些标点符号由多个字符组成一个整体，中间是不能分隔开的。</p><h2 id="预处理操作符" tabindex="-1"><a class="header-anchor" href="#预处理操作符"><span>预处理操作符</span></a></h2><p>预处理操作符是<code>#</code>和<code>##</code>。</p><h2 id="括号" tabindex="-1"><a class="header-anchor" href="#括号"><span>括号</span></a></h2><p>括号用于表示程序的结构。括号都一定是成对存在的。<br> 在 C++ 中，有三种括号标点符号：</p><ul><li><code>(</code> 和 <code>)</code></li><li><code>{</code> 和 <code>}</code></li><li><code>[</code> 和 <code>]</code></li></ul><h2 id="分隔与说明符号" tabindex="-1"><a class="header-anchor" href="#分隔与说明符号"><span>分隔与说明符号</span></a></h2><p>C++ 标准中并没有分隔符号和说明符号这样的分类，这一节分出来是为了帮助读者理解。这些符号往往不表示程序的操作，而是用于分隔程序的不同部分，或者用于说明程序的结构。</p><ul><li><code>;</code> 分号</li><li><code>,</code> 逗号</li><li><code>:</code> 冒号</li><li><code>::</code> 两个冒号（作用域解析操作符）</li><li><code>...</code> 三个英文句号（包展开）</li></ul><h2 id="运算符号" tabindex="-1"><a class="header-anchor" href="#运算符号"><span>运算符号</span></a></h2><p>C++ 标准中并没有运算符号这样的分类，这一节分出来是为了帮助读者理解。运算符号常常用来表示程序中的运算操作。</p><p>单个字符的运算符号有：</p><ul><li><code>?</code> 问号</li><li><code>.</code> 点号</li><li><code>~</code> 波浪号（按位取反）</li><li><code>!</code> 感叹号（逻辑非）</li><li><code>+</code> 加号</li><li><code>-</code> 减号</li><li><code>*</code> 乘号</li><li><code>/</code> 除号</li><li><code>%</code> 百分号（取模）</li><li><code>^</code> 尖角号（异或）</li><li><code>&amp;</code> et连写符（与）</li><li><code>|</code> 竖线（或）</li><li><code>=</code> 等号</li><li><code>&lt;</code> 小于号</li><li><code>&gt;</code> 大于号</li></ul><p>多个字符的运算符号有：</p><ul><li><code>.*</code> 点号和星号</li><li><code>-&gt;</code> 箭头</li><li><code>-&gt;*</code> 箭头和星号</li><li><code>+=</code> 加等号</li><li><code>-=</code> 减等号</li><li><code>*=</code> 乘等号</li><li><code>/=</code> 除等号</li><li><code>%=</code> 取模等号</li><li><code>^=</code> 异或等号</li><li><code>&amp;=</code> 与等号</li><li><code>|=</code> 或等号</li><li><code>==</code> 等于号</li><li><code>!=</code> 不等于号</li><li><code>&lt;=</code> 小于等于号</li><li><code>&gt;=</code> 大于等于号</li><li><code>&lt;=&gt;</code> 飞船/三向比较运算符</li><li><code>&amp;&amp;</code> 逻辑与</li><li><code>||</code> 逻辑或</li><li><code>&lt;&lt;</code> 左移</li><li><code>&gt;&gt;</code> 右移</li><li><code>&lt;&lt;=</code> 左移等号</li><li><code>&gt;&gt;=</code> 右移等号</li><li><code>++</code> 自增</li><li><code>--</code> 自减</li></ul><h2 id="尖括号" tabindex="-1"><a class="header-anchor" href="#尖括号"><span>尖括号</span></a></h2><p>除了上面描述的三种括号，C++ 中还有尖括号<code>&lt;</code>和<code>&gt;</code>。它们实际上就是小于号和大于号，但是在某些情况下，它们会被解释成括号。<br> 类似的，作为括号的<code>&lt;</code>、<code>&gt;</code>必须成对出现，不能单独出现。</p><p>举例而言，在下面的代码中</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里存在的就是两对尖括号。而不是两个小于号和一个右移号。</p><div class="hint-container info"><p class="hint-container-title">是括号还是小于号、大于号</p><p>如何判断<code>&lt;</code>、<code>&gt;</code>是尖括号还是小于号、大于号，是与上下文相关的。在这里的<code>std::vector</code>和<code>std::optional</code>的定义决定了跟在后面的<code>&lt;</code>和<code>&gt;</code>是尖括号。</p></div><h2 id="代用符号" tabindex="-1"><a class="header-anchor" href="#代用符号"><span>代用符号</span></a></h2><p>由于一些历史原因（有的键盘上会缺少一些符号），C++ 中存在一些代用符号。这包括如下：</p><ul><li><code>%:</code> 代替 <code>#</code></li><li><code>%:%:</code> 代替 <code>##</code></li><li><code>&lt;:</code> 代替 <code>[</code></li><li><code>:&gt;</code> 代替 <code>]</code></li><li><code>&lt;%</code> 代替 <code>{</code></li><li><code>%&gt;</code> 代替 <code>}</code></li><li><code>and</code> 代替 <code>&amp;&amp;</code></li><li><code>or</code> 代替 <code>||</code></li><li><code>xor</code> 代替 <code>^</code></li><li><code>not</code> 代替 <code>!</code></li><li><code>bitand</code> 代替 <code>&amp;</code></li><li><code>bitor</code> 代替 <code>|</code></li><li><code>compl</code> 代替 <code>~</code></li><li><code>and_eq</code> 代替 <code>&amp;=</code></li><li><code>or_eq</code> 代替 <code>|=</code></li><li><code>xor_eq</code> 代替 <code>^=</code></li><li><code>not_eq</code> 代替 <code>!=</code></li></ul><p>需要注意，这些代用符号里面有一些看起来很像是标识符。但它们是代用符号，会被处理成标点符号，不能用作标识符。同样的，代用符号也是由多个字符组成的标点符号，中间是不能分隔开的。</p>',26),t=[l];function a(s,n){return d(),c("div",null,t)}const r=e(i,[["render",a],["__file","punctuators.html.vue"]]),g=JSON.parse('{"path":"/zh/01-hello-world/punctuators.html","title":"1.4 标点符号与运算符","lang":"zh-CN","frontmatter":{"title":"1.4 标点符号与运算符"},"headers":[{"level":2,"title":"预处理操作符","slug":"预处理操作符","link":"#预处理操作符","children":[]},{"level":2,"title":"括号","slug":"括号","link":"#括号","children":[]},{"level":2,"title":"分隔与说明符号","slug":"分隔与说明符号","link":"#分隔与说明符号","children":[]},{"level":2,"title":"运算符号","slug":"运算符号","link":"#运算符号","children":[]},{"level":2,"title":"尖括号","slug":"尖括号","link":"#尖括号","children":[]},{"level":2,"title":"代用符号","slug":"代用符号","link":"#代用符号","children":[]}],"git":{"createdTime":1718946845000,"updatedTime":1722113594000,"contributors":[{"name":"dynilath","email":"dynilath@qq.com","commits":6}]},"readingTime":{"minutes":2.77,"words":831},"filePathRelative":"zh/01-hello-world/punctuators.md","localizedDate":"2024年6月21日"}');export{r as comp,g as data};
